#!/usr/bin/env python2
import errno
import os
import shutil
import stat
import sys

DEBUG = False

def mkdirp(dir):
  try:
    os.makedirs(dir)
  except OSError as e:
    if e.errno != errno.EEXIST:
      raise

def looks_like_a_temp_file(fnam):
  return (os.path.isabs(fnam) and stat.S_ISREG(os.stat(fnam).st_mode))

def main(argv):
  tmpdir = os.environ['GIT_MULTIDIFF_TEMP']
  out = open(os.path.join(tmpdir, 'args'), 'a')
  for fnam in argv[1:]:
    if looks_like_a_temp_file(fnam):
      root = 'dslash' if fnam.startswith('//') else 'slash'
      dest = os.path.join(tmpdir, root, '')
      dest += fnam
      mkdirp(os.path.dirname(dest))
      try:
        os.link(fnam, dest)
        if DEBUG: print 'ln %r -> %r' % (fnam, dest)
      except OSError:
        shutil.copy2(fnam, dest)
        if DEBUG: print 'cp %r -> %r' % (fnam, dest)
    else:
      dest = fnam

    if not os.path.isabs(dest):
      dest = os.path.abspath(dest)
      git_prefix = os.environ.get('GIT_PREFIX')
      if git_prefix is not None:
        dest = os.path.relpath(dest, os.environ['GIT_PREFIX'])

    out.write(dest)
    out.write('\0')
  out.close()

if __name__ == '__main__':
  main(sys.argv)

